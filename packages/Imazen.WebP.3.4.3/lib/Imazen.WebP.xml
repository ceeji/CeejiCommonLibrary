<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Imazen.WebP</name>
    </assembly>
    <members>
        <member name="F:Imazen.WebP.Extern.NativeMethods.WEBP_DECODER_ABI_VERSION">
            WEBP_DECODER_ABI_VERSION -> 0x0200
        </member>
        <member name="F:Imazen.WebP.Extern.NativeMethods.WEBP_ENCODER_ABI_VERSION">
            WEBP_ENCODER_ABI_VERSION -> 0x0200
        </member>
        <member name="F:Imazen.WebP.Extern.NativeMethods.WEBP_MAX_DIMENSION">
            <summary>
            The maximum length of any dimension of a WebP image is 16383
            </summary>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPGetDecoderVersion">
            Return Type: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPGetInfo(System.IntPtr,System.UIntPtr,System.Int32@,System.Int32@)">
            <summary>
            Retrieve basic header information: width, height.
            This function will also validate the header and return 0 in
            case of formatting error.
            Pointers 'width' and 'height' can be passed NULL if deemed irrelevant.
            </summary>
            <param name="data"></param>
            <param name="data_size"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeRGBA(System.IntPtr,System.UIntPtr,System.Int32@,System.Int32@)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            width: int*
            height: int*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeARGB(System.IntPtr,System.UIntPtr,System.Int32@,System.Int32@)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            width: int*
            height: int*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeBGRA(System.IntPtr,System.UIntPtr,System.Int32@,System.Int32@)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            width: int*
            height: int*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeRGB(System.IntPtr,System.UIntPtr,System.Int32@,System.Int32@)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            width: int*
            height: int*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeBGR(System.IntPtr,System.UIntPtr,System.Int32@,System.Int32@)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            width: int*
            height: int*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeYUV(System.IntPtr,System.UIntPtr,System.Int32@,System.Int32@,System.IntPtr@,System.IntPtr@,System.Int32@,System.Int32@)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            width: int*
            height: int*
            u: uint8_t**
            v: uint8_t**
            stride: int*
            uv_stride: int*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeRGBAInto(System.IntPtr,System.UIntPtr,System.IntPtr,System.UIntPtr,System.Int32)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            output_buffer: uint8_t*
            output_buffer_size: size_t->unsigned int
            output_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeARGBInto(System.IntPtr,System.UIntPtr,System.IntPtr,System.UIntPtr,System.Int32)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            output_buffer: uint8_t*
            output_buffer_size: size_t->unsigned int
            output_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeBGRAInto(System.IntPtr,System.UIntPtr,System.IntPtr,System.UIntPtr,System.Int32)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            output_buffer: uint8_t*
            output_buffer_size: size_t->unsigned int
            output_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeRGBInto(System.IntPtr,System.UIntPtr,System.IntPtr,System.UIntPtr,System.Int32)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            output_buffer: uint8_t*
            output_buffer_size: size_t->unsigned int
            output_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeBGRInto(System.IntPtr,System.UIntPtr,System.IntPtr,System.UIntPtr,System.Int32)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            output_buffer: uint8_t*
            output_buffer_size: size_t->unsigned int
            output_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecodeYUVInto(System.IntPtr,System.UIntPtr,System.IntPtr,System.UIntPtr,System.Int32,System.IntPtr,System.UIntPtr,System.Int32,System.IntPtr,System.UIntPtr,System.Int32)">
             Return Type: uint8_t*
            data: uint8_t*
            data_size: size_t->unsigned int
            luma: uint8_t*
            luma_size: size_t->unsigned int
            luma_stride: int
            u: uint8_t*
            u_size: size_t->unsigned int
            u_stride: int
            v: uint8_t*
            v_size: size_t->unsigned int
            v_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPInitDecBufferInternal(Imazen.WebP.Extern.WebPDecBuffer@,System.Int32)">
             Return Type: int
            param0: WebPDecBuffer*
            param1: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPFreeDecBuffer(Imazen.WebP.Extern.WebPDecBuffer@)">
             Return Type: void
            buffer: WebPDecBuffer*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPINewDecoder(Imazen.WebP.Extern.WebPDecBuffer@)">
             Return Type: WebPIDecoder*
            output_buffer: WebPDecBuffer*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPINewRGB(Imazen.WebP.Extern.WEBP_CSP_MODE,System.IntPtr,System.UIntPtr,System.Int32)">
             Return Type: WebPIDecoder*
            csp: WEBP_CSP_MODE->Anonymous_cb136f5b_1d5d_49a0_aca4_656a79e9d159
            output_buffer: uint8_t*
            output_buffer_size: size_t->unsigned int
            output_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPINewYUVA(System.IntPtr,System.UIntPtr,System.Int32,System.IntPtr,System.UIntPtr,System.Int32,System.IntPtr,System.UIntPtr,System.Int32,System.IntPtr,System.UIntPtr,System.Int32)">
             Return Type: WebPIDecoder*
            luma: uint8_t*
            luma_size: size_t->unsigned int
            luma_stride: int
            u: uint8_t*
            u_size: size_t->unsigned int
            u_stride: int
            v: uint8_t*
            v_size: size_t->unsigned int
            v_stride: int
            a: uint8_t*
            a_size: size_t->unsigned int
            a_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPINewYUV(System.IntPtr,System.UIntPtr,System.Int32,System.IntPtr,System.UIntPtr,System.Int32,System.IntPtr,System.UIntPtr,System.Int32)">
             Return Type: WebPIDecoder*
            luma: uint8_t*
            luma_size: size_t->unsigned int
            luma_stride: int
            u: uint8_t*
            u_size: size_t->unsigned int
            u_stride: int
            v: uint8_t*
            v_size: size_t->unsigned int
            v_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIDelete(Imazen.WebP.Extern.WebPIDecoder@)">
             Return Type: void
            idec: WebPIDecoder*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIAppend(Imazen.WebP.Extern.WebPIDecoder@,System.IntPtr,System.UIntPtr)">
             Return Type: VP8StatusCode->Anonymous_b244cc15_fbc7_4c41_8884_71fe4f515cd6
            idec: WebPIDecoder*
            data: uint8_t*
            data_size: size_t->unsigned int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIUpdate(Imazen.WebP.Extern.WebPIDecoder@,System.IntPtr,System.UIntPtr)">
             Return Type: VP8StatusCode->Anonymous_b244cc15_fbc7_4c41_8884_71fe4f515cd6
            idec: WebPIDecoder*
            data: uint8_t*
            data_size: size_t->unsigned int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIDecGetRGB(Imazen.WebP.Extern.WebPIDecoder@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             Return Type: uint8_t*
            idec: WebPIDecoder*
            last_y: int*
            width: int*
            height: int*
            stride: int*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIDecGetYUVA(Imazen.WebP.Extern.WebPIDecoder@,System.Int32@,System.IntPtr@,System.IntPtr@,System.IntPtr@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             Return Type: uint8_t*
            idec: WebPIDecoder*
            last_y: int*
            u: uint8_t**
            v: uint8_t**
            a: uint8_t**
            width: int*
            height: int*
            stride: int*
            uv_stride: int*
            a_stride: int*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIDecodedArea(Imazen.WebP.Extern.WebPIDecoder@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
             Return Type: WebPDecBuffer*
            idec: WebPIDecoder*
            left: int*
            top: int*
            width: int*
            height: int*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPGetFeaturesInternal(System.IntPtr,System.UIntPtr,Imazen.WebP.Extern.WebPBitstreamFeatures@,System.Int32)">
             Return Type: VP8StatusCode->Anonymous_b244cc15_fbc7_4c41_8884_71fe4f515cd6
            param0: uint8_t*
            param1: size_t->unsigned int
            param2: WebPBitstreamFeatures*
            param3: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPInitDecoderConfigInternal(Imazen.WebP.Extern.WebPDecoderConfig@,System.Int32)">
             Return Type: int
            param0: WebPDecoderConfig*
            param1: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIDecode(System.IntPtr,System.UIntPtr,Imazen.WebP.Extern.WebPDecoderConfig@)">
             Return Type: WebPIDecoder*
            data: uint8_t*
            data_size: size_t->unsigned int
            config: WebPDecoderConfig*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPDecode(System.IntPtr,System.UIntPtr,Imazen.WebP.Extern.WebPDecoderConfig@)">
             Return Type: VP8StatusCode->Anonymous_b244cc15_fbc7_4c41_8884_71fe4f515cd6
            data: uint8_t*
            data_size: size_t->unsigned int
            config: WebPDecoderConfig*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIsPremultipliedMode(Imazen.WebP.Extern.WEBP_CSP_MODE)">
            <summary>
            Returns true if the specified mode uses a premultiplied alpha
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIsRGBMode(Imazen.WebP.Extern.WEBP_CSP_MODE)">
            <summary>
            Returns true if the given mode is RGB(A)
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPIsAlphaMode(Imazen.WebP.Extern.WEBP_CSP_MODE)">
            <summary>
            Returns true if the given mode has an alpha channel
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPGetFeatures(System.IntPtr,System.UIntPtr,Imazen.WebP.Extern.WebPBitstreamFeatures@)">
            <summary>
            Retrieve features from the bitstream. The *features structure is filled
            with information gathered from the bitstream.
            Returns false in case of error or version mismatch.
            In case of error, features->bitstream_status will reflect the error code.
            </summary>
            <param name="data"></param>
            <param name="data_size"></param>
            <param name="features"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPInitDecoderConfig(Imazen.WebP.Extern.WebPDecoderConfig@)">
            <summary>
            Initialize the configuration as empty. This function must always be
            called first, unless WebPGetFeatures() is to be called.
            Returns false in case of mismatched version.
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPInitDecBuffer(Imazen.WebP.Extern.WebPDecBuffer@)">
            <summary>
            Initialize the structure as empty. Must be called before any other use. Returns false in case of version mismatch
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPGetEncoderVersion">
            Return Type: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPEncodeRGB(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Single,System.IntPtr@)">
             Return Type: size_t->unsigned int
            rgb: uint8_t*
            width: int
            height: int
            stride: int
            quality_factor: float
            output: uint8_t**
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPEncodeBGR(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Single,System.IntPtr@)">
             Return Type: size_t->unsigned int
            bgr: uint8_t*
            width: int
            height: int
            stride: int
            quality_factor: float
            output: uint8_t**
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPEncodeRGBA(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Single,System.IntPtr@)">
             Return Type: size_t->unsigned int
            rgba: uint8_t*
            width: int
            height: int
            stride: int
            quality_factor: float
            output: uint8_t**
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPEncodeBGRA(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Single,System.IntPtr@)">
             Return Type: size_t->unsigned int
            bgra: uint8_t*
            width: int
            height: int
            stride: int
            quality_factor: float
            output: uint8_t**
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPEncodeLosslessRGB(System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr@)">
             Return Type: size_t->unsigned int
            rgb: uint8_t*
            width: int
            height: int
            stride: int
            output: uint8_t**
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPEncodeLosslessBGR(System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr@)">
             Return Type: size_t->unsigned int
            bgr: uint8_t*
            width: int
            height: int
            stride: int
            output: uint8_t**
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPEncodeLosslessRGBA(System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr@)">
             Return Type: size_t->unsigned int
            rgba: uint8_t*
            width: int
            height: int
            stride: int
            output: uint8_t**
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPEncodeLosslessBGRA(System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr@)">
             Return Type: size_t->unsigned int
            bgra: uint8_t*
            width: int
            height: int
            stride: int
            output: uint8_t**
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPConfigInitInternal(Imazen.WebP.Extern.WebPConfig@,Imazen.WebP.Extern.WebPPreset,System.Single,System.Int32)">
             Return Type: int
            param0: WebPConfig*
            param1: WebPPreset->Anonymous_017d4167_f53e_4b3d_b029_592ff5c3f80b
            param2: float
            param3: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPValidateConfig(Imazen.WebP.Extern.WebPConfig@)">
             Return Type: int
            config: WebPConfig*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPMemoryWriterInit(Imazen.WebP.Extern.WebPMemoryWriter@)">
             Return Type: void
            writer: WebPMemoryWriter*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPMemoryWrite(System.IntPtr,System.UIntPtr,Imazen.WebP.Extern.WebPPicture@)">
             Return Type: int
            data: uint8_t*
            data_size: size_t->unsigned int
            picture: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureInitInternal(Imazen.WebP.Extern.WebPPicture@,System.Int32)">
             Return Type: int
            param0: WebPPicture*
            param1: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureAlloc(Imazen.WebP.Extern.WebPPicture@)">
             Return Type: int
            picture: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureFree(Imazen.WebP.Extern.WebPPicture@)">
             Return Type: void
            picture: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureCopy(Imazen.WebP.Extern.WebPPicture@,Imazen.WebP.Extern.WebPPicture@)">
             Return Type: int
            src: WebPPicture*
            dst: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureDistortion(Imazen.WebP.Extern.WebPPicture@,Imazen.WebP.Extern.WebPPicture@,System.Int32,System.Single@)">
            <summary>
            Compute PSNR, SSIM or LSIM distortion metric between two pictures.
            Result is in dB, stores in result[] in the Y/U/V/Alpha/All order.
            Returns false in case of error (src and ref don't have same dimension, ...)
            Warning: this function is rather CPU-intensive.
            </summary>
            <param name="src"></param>
            <param name="reference"></param>
            <param name="metric_type">0 = PSNR, 1 = SSIM, 2 = LSIM</param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureCrop(Imazen.WebP.Extern.WebPPicture@,System.Int32,System.Int32,System.Int32,System.Int32)">
             Return Type: int
            picture: WebPPicture*
            left: int
            top: int
            width: int
            height: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureView(Imazen.WebP.Extern.WebPPicture@,System.Int32,System.Int32,System.Int32,System.Int32,Imazen.WebP.Extern.WebPPicture@)">
             Return Type: int
            src: WebPPicture*
            left: int
            top: int
            width: int
            height: int
            dst: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureIsView(Imazen.WebP.Extern.WebPPicture@)">
             Return Type: int
            picture: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureRescale(Imazen.WebP.Extern.WebPPicture@,System.Int32,System.Int32)">
             Return Type: int
            pic: WebPPicture*
            width: int
            height: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureImportRGB(Imazen.WebP.Extern.WebPPicture@,System.IntPtr,System.Int32)">
             Return Type: int
            picture: WebPPicture*
            rgb: uint8_t*
            rgb_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureImportRGBA(Imazen.WebP.Extern.WebPPicture@,System.IntPtr,System.Int32)">
             Return Type: int
            picture: WebPPicture*
            rgba: uint8_t*
            rgba_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureImportRGBX(Imazen.WebP.Extern.WebPPicture@,System.IntPtr,System.Int32)">
             Return Type: int
            picture: WebPPicture*
            rgbx: uint8_t*
            rgbx_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureImportBGR(Imazen.WebP.Extern.WebPPicture@,System.IntPtr,System.Int32)">
             Return Type: int
            picture: WebPPicture*
            bgr: uint8_t*
            bgr_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureImportBGRA(Imazen.WebP.Extern.WebPPicture@,System.IntPtr,System.Int32)">
             Return Type: int
            picture: WebPPicture*
            bgra: uint8_t*
            bgra_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureImportBGRX(Imazen.WebP.Extern.WebPPicture@,System.IntPtr,System.Int32)">
             Return Type: int
            picture: WebPPicture*
            bgrx: uint8_t*
            bgrx_stride: int
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureARGBToYUVA(Imazen.WebP.Extern.WebPPicture@,Imazen.WebP.Extern.WebPEncCSP)">
             Return Type: int
            picture: WebPPicture*
            colorspace: WebPEncCSP->Anonymous_84ce7065_fe91_48b4_93d8_1f0e84319dba
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureYUVAToARGB(Imazen.WebP.Extern.WebPPicture@)">
             Return Type: int
            picture: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPCleanupTransparentArea(Imazen.WebP.Extern.WebPPicture@)">
             Return Type: void
            picture: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureHasTransparency(Imazen.WebP.Extern.WebPPicture@)">
             Return Type: int
            picture: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPEncode(Imazen.WebP.Extern.WebPConfig@,Imazen.WebP.Extern.WebPPicture@)">
             Return Type: int
            config: WebPConfig*
            picture: WebPPicture*
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPConfigInit(Imazen.WebP.Extern.WebPConfig@)">
            <summary>
            Should always be called, to initialize a fresh WebPConfig structure before
            modification. Returns false in case of version mismatch. WebPConfigInit()
            must have succeeded before using the 'config' object.
            Note that the default values are lossless=0 and quality=75.
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPConfigPreset(Imazen.WebP.Extern.WebPConfig@,Imazen.WebP.Extern.WebPPreset,System.Single)">
            <summary>
            This function will initialize the configuration according to a predefined
            set of parameters (referred to by 'preset') and a given quality factor.
            This function can be called as a replacement to WebPConfigInit(). Will return false in case of error.
            </summary>
            <param name="config"></param>
            <param name="preset"></param>
            <param name="quality"></param>
            <returns></returns>
        </member>
        <member name="M:Imazen.WebP.Extern.NativeMethods.WebPPictureInit(Imazen.WebP.Extern.WebPPicture@)">
            <summary>
            Should always be called, to initialize the structure. Returns false in case
            of version mismatch. WebPPictureInit() must have succeeded before using the
            'picture' object.
            Note that, by default, use_argb is false and colorspace is WEBP_YUV420.
            </summary>
            <param name="picture"></param>
            <returns></returns>
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_RGB">
            MODE_RGB -> 0
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_RGBA">
            MODE_RGBA -> 1
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_BGR">
            MODE_BGR -> 2
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_BGRA">
            MODE_BGRA -> 3
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_ARGB">
            MODE_ARGB -> 4
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_RGBA_4444">
            MODE_RGBA_4444 -> 5
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_RGB_565">
            MODE_RGB_565 -> 6
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_rgbA">
            MODE_rgbA -> 7
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_bgrA">
            MODE_bgrA -> 8
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_Argb">
            MODE_Argb -> 9
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_rgbA_4444">
            MODE_rgbA_4444 -> 10
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_YUV">
            MODE_YUV -> 11
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_YUVA">
            MODE_YUVA -> 12
        </member>
        <member name="F:Imazen.WebP.Extern.WEBP_CSP_MODE.MODE_LAST">
            MODE_LAST -> 13
        </member>
        <member name="F:Imazen.WebP.Extern.WebPRGBABuffer.rgba">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPRGBABuffer.stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPRGBABuffer.size">
            size_t->unsigned int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.y">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.u">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.v">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.a">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.y_stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.u_stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.v_stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.a_stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.y_size">
            size_t->unsigned int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.u_size">
            size_t->unsigned int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.v_size">
            size_t->unsigned int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPYUVABuffer.a_size">
            size_t->unsigned int
        </member>
        <member name="F:Imazen.WebP.Extern.Anonymous_690ed5ec_4c3d_40c6_9bd0_0747b5a28b54.RGBA">
            WebPRGBABuffer->Anonymous_47cdec86_3c1a_4b39_ab93_76bc7499076a
        </member>
        <member name="F:Imazen.WebP.Extern.Anonymous_690ed5ec_4c3d_40c6_9bd0_0747b5a28b54.YUVA">
            WebPYUVABuffer->Anonymous_70de6e8e_c3ae_4506_bef0_c17f17a7e678
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecBuffer.colorspace">
            WEBP_CSP_MODE->Anonymous_cb136f5b_1d5d_49a0_aca4_656a79e9d159
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecBuffer.width">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecBuffer.height">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecBuffer.is_external_memory">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecBuffer.u">
            Anonymous_690ed5ec_4c3d_40c6_9bd0_0747b5a28b54
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecBuffer.pad">
            uint32_t[4]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecBuffer.private_memory">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.VP8StatusCode.VP8_STATUS_OK">
            VP8_STATUS_OK -> 0
        </member>
        <!-- Badly formed XML comment ignored for member "T:Imazen.WebP.Extern.WebPBitstreamFeatures" -->
        <member name="F:Imazen.WebP.Extern.WebPBitstreamFeatures.width">
            <summary>
            Width in pixels, as read from the bitstream
            </summary>
        </member>
        <member name="F:Imazen.WebP.Extern.WebPBitstreamFeatures.height">
            <summary>
            Height in pixels, as read from the bitstream.
            </summary>
        </member>
        <member name="F:Imazen.WebP.Extern.WebPBitstreamFeatures.has_alpha">
            <summary>
            // True if the bitstream contains an alpha channel.
            </summary>
        </member>
        <member name="F:Imazen.WebP.Extern.WebPBitstreamFeatures.bitstream_version">
            <summary>
            Unused for now - should be 0
            </summary>
        </member>
        <member name="F:Imazen.WebP.Extern.WebPBitstreamFeatures.no_incremental_decoding">
            <summary>
            If true, incremental decoding is not reccomended
            </summary>
        </member>
        <member name="F:Imazen.WebP.Extern.WebPBitstreamFeatures.rotate">
            <summary>
            Unused, should be 0 for now
            </summary>
        </member>
        <member name="F:Imazen.WebP.Extern.WebPBitstreamFeatures.uv_sampling">
            <summary>
            Unused, should be 0 for now
            </summary>
        </member>
        <member name="F:Imazen.WebP.Extern.WebPBitstreamFeatures.pad">
            <summary>
            Padding for later use
            </summary>
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.bypass_filtering">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.no_fancy_upsampling">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.use_cropping">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.crop_left">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.crop_top">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.crop_width">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.crop_height">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.use_scaling">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.scaled_width">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.scaled_height">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.use_threads">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.force_rotation">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.no_enhancement">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderOptions.pad">
            uint32_t[6]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderConfig.input">
            WebPBitstreamFeatures->Anonymous_c6b01f0b_3e38_4731_b2d6_9c0e3bdb71aa
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderConfig.output">
            WebPDecBuffer->Anonymous_5c438b36_7de6_498e_934a_d3613b37f5fc
        </member>
        <member name="F:Imazen.WebP.Extern.WebPDecoderConfig.options">
            WebPDecoderOptions->Anonymous_78066979_3e1e_4d74_aee5_f316b20e3385
        </member>
        <member name="F:Imazen.WebP.Extern.WebPImageHint.WEBP_HINT_DEFAULT">
            WEBP_HINT_DEFAULT -> 0
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.lossless">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.quality">
            float
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.method">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.image_hint">
            WebPImageHint->Anonymous_838f22f5_6f57_48a0_9ecb_8eec917009f9
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.target_size">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.target_PSNR">
            float
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.segments">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.sns_strength">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.filter_strength">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.filter_sharpness">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.filter_type">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.autofilter">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.alpha_compression">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.alpha_filtering">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.alpha_quality">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.pass">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.show_compressed">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.preprocessing">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.partitions">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.partition_limit">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPConfig.pad">
            uint32_t[8]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPreset.WEBP_PRESET_DEFAULT">
            WEBP_PRESET_DEFAULT -> 0
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.coded_size">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.PSNR">
            float[5]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.block_count">
            int[3]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.header_bytes">
            int[2]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.residual_bytes">
            int[12]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.segment_size">
            int[4]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.segment_quant">
            int[4]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.segment_level">
            int[4]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.alpha_data_size">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.layer_data_size">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.lossless_features">
            uint32_t->unsigned int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.histogram_bits">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.transform_bits">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.cache_bits">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.palette_size">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.lossless_size">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPAuxStats.pad">
            uint32_t[4]
        </member>
        <member name="T:Imazen.WebP.Extern.WebPWriterFunction">
             Return Type: int
            data: uint8_t*
            data_size: size_t->unsigned int
            picture: WebPPicture*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPMemoryWriter.mem">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPMemoryWriter.size">
            size_t->unsigned int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPMemoryWriter.max_size">
            size_t->unsigned int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPMemoryWriter.pad">
            uint32_t[1]
        </member>
        <member name="T:Imazen.WebP.Extern.WebPProgressHook">
             Return Type: int
            percent: int
            picture: WebPPicture*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_YUV420">
            WEBP_YUV420 -> 0
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_YUV422">
            WEBP_YUV422 -> 1
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_YUV444">
            WEBP_YUV444 -> 2
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_YUV400">
            WEBP_YUV400 -> 3
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_CSP_UV_MASK">
            WEBP_CSP_UV_MASK -> 3
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_YUV420A">
            WEBP_YUV420A -> 4
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_YUV422A">
            WEBP_YUV422A -> 5
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_YUV444A">
            WEBP_YUV444A -> 6
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_YUV400A">
            WEBP_YUV400A -> 7
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncCSP.WEBP_CSP_ALPHA_BIT">
            WEBP_CSP_ALPHA_BIT -> 4
        </member>
        <member name="F:Imazen.WebP.Extern.WebPEncodingError.VP8_ENC_OK">
            VP8_ENC_OK -> 0
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.use_argb">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.colorspace">
            WebPEncCSP->Anonymous_84ce7065_fe91_48b4_93d8_1f0e84319dba
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.width">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.height">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.y">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.u">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.v">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.y_stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.uv_stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.a">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.a_stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.pad1">
            uint32_t[2]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.argb">
            uint32_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.argb_stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.pad2">
            uint32_t[3]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.writer">
            WebPWriterFunction
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.custom_ptr">
            void*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.extra_info_type">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.extra_info">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.stats">
            WebPAuxStats*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.error_code">
            WebPEncodingError->Anonymous_8b714d63_f91b_46af_b0d0_667c703ed356
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.progress_hook">
            WebPProgressHook
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.user_data">
            void*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.pad3">
            uint32_t[3]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.u0">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.v0">
            uint8_t*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.uv0_stride">
            int
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.pad4">
            uint32_t[7]
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.memory_">
            void*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.memory_argb_">
            void*
        </member>
        <member name="F:Imazen.WebP.Extern.WebPPicture.pad5">
            void*[2]
        </member>
        <member name="M:Imazen.WebP.SimpleEncoder.Encode(System.Drawing.Bitmap,System.IO.Stream,System.Single,System.Boolean)">
            <summary>
            Encodes the given RGB(A) bitmap to the given stream. Specify quality = -1 for lossless, otherwise specify a value between 0 and 100.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="quality"></param>
        </member>
    </members>
</doc>
